{
	"info": {
		"name": "Microservices API Collection",
		"description": "Comprehensive testing collection for Billing and Profile services with proper authentication and permissions",
		"version": "1.0.0",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"description": "Base URL for all services"
		},
		{
			"key": "auth_token",
			"value": "",
			"description": "JWT token for authentication"
		},
		{
			"key": "user_id",
			"value": "",
			"description": "Current user ID"
		},
		{
			"key": "plan_id",
			"value": "",
			"description": "Sample plan ID for testing"
		},
		{
			"key": "subscription_id",
			"value": "",
			"description": "Sample subscription ID for testing"
		},
		{
			"key": "profile_id",
			"value": "",
			"description": "Sample profile ID for testing"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{auth_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Set common headers for protected routes",
					"if (pm.request.url.path.includes('protected')) {",
					"    pm.request.headers.add({",
					"        key: 'Authorization',",
					"        value: 'Bearer ' + pm.collectionVariables.get('auth_token')",
					"    });",
					"}"
				]
			}
		}
	],
	"item": [
		{
			"name": "Authentication Service",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/auth/health",
							"host": [ "{{base_url}}" ],
							"path": [ "auth", "health" ]
						}
					}
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.token) {",
									"        pm.collectionVariables.set('auth_token', response.data.token);",
									"        pm.collectionVariables.set('user_id', response.data.user.id);",
									"        console.log('Token set:', response.data.token);",
									"    }",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/auth/login",
							"host": [ "{{base_url}}" ],
							"path": [ "auth", "login" ]
						}
					}
				},
				{
					"name": "Validate Token",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{auth_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/middleware/auth/validate",
							"host": [ "{{base_url}}" ],
							"path": [ "middleware", "auth", "validate" ]
						}
					}
				}
			]
		},
		{
			"name": "Billing Service - Public Routes",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/billing/health",
							"host": [ "{{base_url}}" ],
							"path": [ "billing", "health" ]
						}
					}
				},
				{
					"name": "List Public Plans",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.data && response.data.plans && response.data.plans.length > 0) {",
									"        pm.collectionVariables.set('plan_id', response.data.plans[0].id);",
									"    }",
									"}"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/billing/public/plans?page=1&limit=10",
							"host": [ "{{base_url}}" ],
							"path": [ "billing", "public", "plans" ],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						}
					}
				},
				{
					"name": "List Active Plans",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/billing/public/plans/active",
							"host": [ "{{base_url}}" ],
							"path": [ "billing", "public", "plans", "active" ]
						}
					}
				},
				{
					"name": "Get Plans by Type",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/billing/public/plans/types/premium",
							"host": [ "{{base_url}}" ],
							"path": [ "billing", "public", "plans", "types", "premium" ]
						}
					}
				},
				{
					"name": "Get Public Plan Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/billing/public/plans/{{plan_id}}",
							"host": [ "{{base_url}}" ],
							"path": [ "billing", "public", "plans", "{{plan_id}}" ]
						}
					}
				},
				{
					"name": "Get Public Plan Stats",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/billing/public/plans/stats/public",
							"host": [ "{{base_url}}" ],
							"path": [ "billing", "public", "plans", "stats", "public" ]
						}
					}
				}
			]
		},
		{
			"name": "Billing Service - Protected Routes",
			"item": [
				{
					"name": "Plans Management",
					"item": [
						{
							"name": "Create Plan (Admin)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Test Premium Plan\",\n    \"description\": \"A test premium plan for development\",\n    \"planType\": \"premium\",\n    \"price\": 29.99,\n    \"currency\": \"USD\",\n    \"duration\": 30,\n    \"features\": [\"Feature 1\", \"Feature 2\", \"Feature 3\"],\n    \"isActive\": true\n}"
								},
								"url": {
									"raw": "{{base_url}}/billing/protected/plans",
									"host": [ "{{base_url}}" ],
									"path": [ "billing", "protected", "plans" ]
								}
							}
						},
						{
							"name": "List All Plans (Admin)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/billing/protected/plans?page=1&limit=20&activeOnly=false",
									"host": [ "{{base_url}}" ],
									"path": [ "billing", "protected", "plans" ],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "20"
										},
										{
											"key": "activeOnly",
											"value": "false"
										}
									]
								}
							}
						},
						{
							"name": "Get Plan (Admin View)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/billing/protected/plans/{{plan_id}}/admin",
									"host": [ "{{base_url}}" ],
									"path": [ "billing", "protected", "plans", "{{plan_id}}", "admin" ]
								}
							}
						},
						{
							"name": "Update Plan",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Updated Premium Plan\",\n    \"description\": \"Updated description\",\n    \"price\": 39.99\n}"
								},
								"url": {
									"raw": "{{base_url}}/billing/protected/plans/{{plan_id}}",
									"host": [ "{{base_url}}" ],
									"path": [ "billing", "protected", "plans", "{{plan_id}}" ]
								}
							}
						},
						{
							"name": "Activate Plan",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{base_url}}/billing/protected/plans/{{plan_id}}/activate",
									"host": [ "{{base_url}}" ],
									"path": [ "billing", "protected", "plans", "{{plan_id}}", "activate" ]
								}
							}
						},
						{
							"name": "Deactivate Plan",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{base_url}}/billing/protected/plans/{{plan_id}}/deactivate",
									"host": [ "{{base_url}}" ],
									"path": [ "billing", "protected", "plans", "{{plan_id}}", "deactivate" ]
								}
							}
						},
						{
							"name": "Delete Plan",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/billing/protected/plans/{{plan_id}}",
									"host": [ "{{base_url}}" ],
									"path": [ "billing", "protected", "plans", "{{plan_id}}" ]
								}
							}
						},
						{
							"name": "Get Plan Stats (Admin)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/billing/protected/plans/stats",
									"host": [ "{{base_url}}" ],
									"path": [ "billing", "protected", "plans", "stats" ]
								}
							}
						}
					]
				},
				{
					"name": "Subscriptions Management",
					"item": [
						{
							"name": "Create Subscription",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 201) {",
											"    const response = pm.response.json();",
											"    if (response.data && response.data.subscription) {",
											"        pm.collectionVariables.set('subscription_id', response.data.subscription.id);",
											"    }",
											"}"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userId\": \"{{user_id}}\",\n    \"planId\": \"{{plan_id}}\",\n    \"paymentMethod\": \"credit_card\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/billing/protected/subscriptions",
									"host": [ "{{base_url}}" ],
									"path": [ "billing", "protected", "subscriptions" ]
								}
							}
						},
						{
							"name": "Get My Subscription",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/billing/protected/subscriptions/user/{{user_id}}",
									"host": [ "{{base_url}}" ],
									"path": [ "billing", "protected", "subscriptions", "user", "{{user_id}}" ]
								}
							}
						},
						{
							"name": "Get Subscription Details",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/billing/protected/subscriptions/{{subscription_id}}",
									"host": [ "{{base_url}}" ],
									"path": [ "billing", "protected", "subscriptions", "{{subscription_id}}" ]
								}
							}
						},
						{
							"name": "Update Subscription",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"planId\": \"{{plan_id}}\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/billing/protected/subscriptions/{{subscription_id}}",
									"host": [ "{{base_url}}" ],
									"path": [ "billing", "protected", "subscriptions", "{{subscription_id}}" ]
								}
							}
						},
						{
							"name": "Renew Subscription (Admin)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{base_url}}/billing/protected/subscriptions/{{subscription_id}}/renew",
									"host": [ "{{base_url}}" ],
									"path": [ "billing", "protected", "subscriptions", "{{subscription_id}}", "renew" ]
								}
							}
						},
						{
							"name": "Suspend Subscription (Admin)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reason\": \"Administrative suspension for testing\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/billing/protected/subscriptions/{{subscription_id}}/suspend",
									"host": [ "{{base_url}}" ],
									"path": [ "billing", "protected", "subscriptions", "{{subscription_id}}", "suspend" ]
								}
							}
						},
						{
							"name": "Reactivate Subscription (Admin)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"url": {
									"raw": "{{base_url}}/billing/protected/subscriptions/{{subscription_id}}/reactivate",
									"host": [ "{{base_url}}" ],
									"path": [ "billing", "protected", "subscriptions", "{{subscription_id}}", "reactivate" ]
								}
							}
						},
						{
							"name": "Cancel Subscription",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"reason\": \"User requested cancellation\"\n}"
								},
								"url": {
									"raw": "{{base_url}}/billing/protected/subscriptions/{{subscription_id}}",
									"host": [ "{{base_url}}" ],
									"path": [ "billing", "protected", "subscriptions", "{{subscription_id}}" ]
								}
							}
						},
						{
							"name": "Search Subscriptions (Admin)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/billing/protected/subscriptions/search?page=1&pageSize=20&status=active",
									"host": [ "{{base_url}}" ],
									"path": [ "billing", "protected", "subscriptions", "search" ],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "20"
										},
										{
											"key": "status",
											"value": "active"
										}
									]
								}
							}
						},
						{
							"name": "Get Subscription with Plan (Admin)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/billing/protected/subscriptions/{{subscription_id}}/with-plan",
									"host": [ "{{base_url}}" ],
									"path": [ "billing", "protected", "subscriptions", "{{subscription_id}}", "with-plan" ]
								}
							}
						},
						{
							"name": "Get Billing Dashboard (Admin)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/billing/protected/subscriptions/dashboard",
									"host": [ "{{base_url}}" ],
									"path": [ "billing", "protected", "subscriptions", "dashboard" ]
								}
							}
						},
						{
							"name": "Get Expiring Subscriptions (Admin)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/billing/protected/subscriptions/expiring?daysAhead=7",
									"host": [ "{{base_url}}" ],
									"path": [ "billing", "protected", "subscriptions", "expiring" ],
									"query": [
										{
											"key": "daysAhead",
											"value": "7"
										}
									]
								}
							}
						},
						{
							"name": "Process Trial Expirations (System)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{base_url}}/billing/protected/subscriptions/process-trial-expirations",
									"host": [ "{{base_url}}" ],
									"path": [ "billing", "protected", "subscriptions", "process-trial-expirations" ]
								}
							}
						}
					]
				}
			]
		},
		{
			"name": "Profile Service - Public Routes",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/profile/health",
							"host": [ "{{base_url}}" ],
							"path": [ "profile", "health" ]
						}
					}
				},
				{
					"name": "Search Public Profiles",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/profile/public/profiles/search?name=&institution=&field=&country=&page=1&pageSize=20",
							"host": [ "{{base_url}}" ],
							"path": [ "profile", "public", "profiles", "search" ],
							"query": [
								{
									"key": "name",
									"value": ""
								},
								{
									"key": "institution",
									"value": ""
								},
								{
									"key": "field",
									"value": ""
								},
								{
									"key": "country",
									"value": ""
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "pageSize",
									"value": "20"
								}
							]
						}
					}
				},
				{
					"name": "Get Public Profile by User ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/profile/public/profiles/user/{{user_id}}",
							"host": [ "{{base_url}}" ],
							"path": [ "profile", "public", "profiles", "user", "{{user_id}}" ]
						}
					}
				},
				{
					"name": "Get Public Profile by Profile ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/profile/public/profiles/{{profile_id}}/public",
							"host": [ "{{base_url}}" ],
							"path": [ "profile", "public", "profiles", "{{profile_id}}", "public" ]
						}
					}
				}
			]
		},
		{
			"name": "Profile Service - Protected Routes",
			"item": [
				{
					"name": "Self-Service",
					"item": [
						{
							"name": "Get My Profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"if (pm.response.code === 200) {",
											"    const response = pm.response.json();",
											"    if (response.data && response.data.profile) {",
											"        pm.collectionVariables.set('profile_id', response.data.profile.id);",
											"    }",
											"}"
										]
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/profile/protected/profiles/me",
									"host": [ "{{base_url}}" ],
									"path": [ "profile", "protected", "profiles", "me" ]
								}
							}
						},
						{
							"name": "Update My Profile",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profile\": {\n        \"name\": \"Updated Test User\",\n        \"bio\": \"Updated bio for testing\",\n        \"institution\": \"Test University\",\n        \"field\": \"Computer Science\",\n        \"country\": \"United States\",\n        \"publicEmail\": \"public@example.com\",\n        \"socialLinks\": {\n            \"linkedin\": \"https://linkedin.com/in/testuser\",\n            \"twitter\": \"@testuser\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{base_url}}/profile/protected/profiles/me",
									"host": [ "{{base_url}}" ],
									"path": [ "profile", "protected", "profiles", "me" ]
								}
							}
						},
						{
							"name": "Get My Profile Completeness",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/profile/protected/profiles/me/completeness",
									"host": [ "{{base_url}}" ],
									"path": [ "profile", "protected", "profiles", "me", "completeness" ]
								}
							}
						},
						{
							"name": "Delete My Profile",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/profile/protected/profiles/me",
									"host": [ "{{base_url}}" ],
									"path": [ "profile", "protected", "profiles", "me" ]
								}
							}
						}
					]
				},
				{
					"name": "Profile Management",
					"item": [
						{
							"name": "Get Profile by User ID (Owner/Admin)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/profile/protected/profiles/user/{{user_id}}",
									"host": [ "{{base_url}}" ],
									"path": [ "profile", "protected", "profiles", "user", "{{user_id}}" ]
								}
							}
						},
						{
							"name": "Update Profile by User ID (Owner/Admin)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profile\": {\n        \"name\": \"Admin Updated Profile\",\n        \"bio\": \"Updated by admin\",\n        \"institution\": \"Admin University\"\n    }\n}"
								},
								"url": {
									"raw": "{{base_url}}/profile/protected/profiles/user/{{user_id}}",
									"host": [ "{{base_url}}" ],
									"path": [ "profile", "protected", "profiles", "user", "{{user_id}}" ]
								}
							}
						},
						{
							"name": "Get Profile by ID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/profile/protected/profiles/{{profile_id}}",
									"host": [ "{{base_url}}" ],
									"path": [ "profile", "protected", "profiles", "{{profile_id}}" ]
								}
							}
						},
						{
							"name": "Update Profile by ID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profile\": {\n        \"name\": \"Profile Updated via ID\",\n        \"bio\": \"Updated using profile ID\"\n    }\n}"
								},
								"url": {
									"raw": "{{base_url}}/profile/protected/profiles/{{profile_id}}",
									"host": [ "{{base_url}}" ],
									"path": [ "profile", "protected", "profiles", "{{profile_id}}" ]
								}
							}
						},
						{
							"name": "Get Profile Completeness by ID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/profile/protected/profiles/{{profile_id}}/completeness",
									"host": [ "{{base_url}}" ],
									"path": [ "profile", "protected", "profiles", "{{profile_id}}", "completeness" ]
								}
							}
						},
						{
							"name": "Delete Profile by ID",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{base_url}}/profile/protected/profiles/{{profile_id}}",
									"host": [ "{{base_url}}" ],
									"path": [ "profile", "protected", "profiles", "{{profile_id}}" ]
								}
							}
						}
					]
				},
				{
					"name": "Admin Operations",
					"item": [
						{
							"name": "List All Profiles (Admin)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/profile/protected/profiles?page=1&limit=20",
									"host": [ "{{base_url}}" ],
									"path": [ "profile", "protected", "profiles" ],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "20"
										}
									]
								}
							}
						},
						{
							"name": "Search Profiles (Admin)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/profile/protected/profiles/search?name=&institution=&field=&country=&page=1&pageSize=20",
									"host": [ "{{base_url}}" ],
									"path": [ "profile", "protected", "profiles", "search" ],
									"query": [
										{
											"key": "name",
											"value": ""
										},
										{
											"key": "institution",
											"value": ""
										},
										{
											"key": "field",
											"value": ""
										},
										{
											"key": "country",
											"value": ""
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "20"
										}
									]
								}
							}
						},
						{
							"name": "Get Profile Analytics (Admin)",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/profile/protected/profiles/analytics",
									"host": [ "{{base_url}}" ],
									"path": [ "profile", "protected", "profiles", "analytics" ]
								}
							}
						}
					]
				}
			]
		},
		{
			"name": "Permission Testing",
			"item": [
				{
					"name": "Test Unauthorized Access",
					"item": [
						{
							"name": "Access Admin Plans Without Token",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/billing/protected/plans",
									"host": [ "{{base_url}}" ],
									"path": [ "billing", "protected", "plans" ]
								}
							}
						},
						{
							"name": "Access Admin Plans With Invalid Token",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer invalid_token_here"
									}
								],
								"url": {
									"raw": "{{base_url}}/billing/protected/plans",
									"host": [ "{{base_url}}" ],
									"path": [ "billing", "protected", "plans" ]
								}
							}
						},
						{
							"name": "Try to Access Another User's Profile",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/profile/protected/profiles/user/different_user_id_here",
									"host": [ "{{base_url}}" ],
									"path": [ "profile", "protected", "profiles", "user", "different_user_id_here" ]
								}
							}
						},
						{
							"name": "Try to Create Plan Without Admin Permission",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Unauthorized Plan\",\n    \"description\": \"This should fail\",\n    \"planType\": \"premium\",\n    \"price\": 99.99\n}"
								},
								"url": {
									"raw": "{{base_url}}/billing/protected/plans",
									"host": [ "{{base_url}}" ],
									"path": [ "billing", "protected", "plans" ]
								}
							}
						}
					]
				},
				{
					"name": "Test User Permissions",
					"item": [
						{
							"name": "User Can Access Own Subscription",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/billing/protected/subscriptions/user/{{user_id}}",
									"host": [ "{{base_url}}" ],
									"path": [ "billing", "protected", "subscriptions", "user", "{{user_id}}" ]
								}
							}
						},
						{
							"name": "User Can Access Own Profile",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/profile/protected/profiles/me",
									"host": [ "{{base_url}}" ],
									"path": [ "profile", "protected", "profiles", "me" ]
								}
							}
						},
						{
							"name": "User Can Update Own Profile",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{auth_token}}",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"profile\": {\n        \"bio\": \"User updated their own bio\"\n    }\n}"
								},
								"url": {
									"raw": "{{base_url}}/profile/protected/profiles/me",
									"host": [ "{{base_url}}" ],
									"path": [ "profile", "protected", "profiles", "me" ]
								}
							}
						}
					]
				}
			]
		},
		{
			"name": "Environment Setup",
			"item": [
				{
					"name": "Set Test Variables",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Set common test variables",
									"pm.collectionVariables.set('base_url', 'http://localhost:8080');",
									"pm.collectionVariables.set('test_user_email', 'test@example.com');",
									"pm.collectionVariables.set('test_user_password', 'password123');",
									"",
									"console.log('Test variables set:');",
									"console.log('base_url:', pm.collectionVariables.get('base_url'));",
									"console.log('Ready for testing!');"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": [ "{{base_url}}" ],
							"path": [ "health" ]
						}
					}
				},
				{
					"name": "Clear All Variables",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Clear all collection variables",
									"pm.collectionVariables.clear();",
									"console.log('All collection variables cleared');"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": [ "{{base_url}}" ],
							"path": [ "health" ]
						}
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global pre-request script",
					"console.log('Request to:', pm.request.url);",
					"",
					"// Auto-add auth header for protected routes",
					"if (pm.request.url.path && pm.request.url.path.includes('protected')) {",
					"    const token = pm.collectionVariables.get('auth_token');",
					"    if (token && !pm.request.headers.has('Authorization')) {",
					"        pm.request.headers.add({",
					"            key: 'Authorization',",
					"            value: 'Bearer ' + token",
					"        });",
					"    }",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test script",
					"console.log('Response status:', pm.response.code);",
					"",
					"// Log response for debugging",
					"if (pm.response.code >= 400) {",
					"    console.log('Error response:', pm.response.text());",
					"}",
					"",
					"// Common tests",
					"pm.test('Response time is less than 5000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});",
					"",
					"pm.test('Response has valid JSON format', function () {",
					"    try {",
					"        pm.response.json();",
					"    } catch (e) {",
					"        // Only fail if we expect JSON (not for health checks returning plain text)",
					"        if (pm.response.headers.get('Content-Type') && pm.response.headers.get('Content-Type').includes('application/json')) {",
					"            pm.expect.fail('Response is not valid JSON');",
					"        }",
					"    }",
					"});"
				]
			}
		}
	]
}