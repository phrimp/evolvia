{
  "info": {
    "name": "Quiz Service API - Skill Based",
    "description": "API collection for Quiz Service with skill-based question bank system",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:6666",
      "type": "string"
    },
    {
      "key": "userToken",
      "value": "your_jwt_token_here",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Public Skill Routes",
      "item": [
        {
          "name": "List All Skills",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/public/quizz/skill/",
              "host": ["{{baseUrl}}"],
              "path": ["public", "quizz", "skill", ""]
            },
            "description": "Get all available skills from knowledge service"
          }
        },
        {
          "name": "Get Skill by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/public/quizz/skill/:id",
              "host": ["{{baseUrl}}"],
              "path": ["public", "quizz", "skill", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "67893abc123def456789",
                  "description": "Skill ID from knowledge service"
                }
              ]
            },
            "description": "Get a specific skill by its ID"
          }
        },
        {
          "name": "Get Skills by Category",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/public/quizz/skill/category/:categoryId",
              "host": ["{{baseUrl}}"],
              "path": ["public", "quizz", "skill", "category", ":categoryId"],
              "variable": [
                {
                  "key": "categoryId",
                  "value": "programming",
                  "description": "Category ID"
                }
              ]
            },
            "description": "Get skills by category"
          }
        }
      ]
    },
    {
      "name": "Public Question Routes",
      "item": [
        {
          "name": "List All Questions",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/public/quizz/question/?skill_id={{skillId}}",
              "host": ["{{baseUrl}}"],
              "path": ["public", "quizz", "question", ""],
              "query": [
                {
                  "key": "skill_id",
                  "value": "{{skillId}}",
                  "description": "Filter by skill ID"
                }
              ]
            },
            "description": "Get questions, optionally filtered by skill"
          }
        },
        {
          "name": "Get Question by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/public/quizz/question/:id",
              "host": ["{{baseUrl}}"],
              "path": ["public", "quizz", "question", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "question_id_here",
                  "description": "Question ID"
                }
              ]
            },
            "description": "Get a specific question by its ID"
          }
        }
      ]
    },
    {
      "name": "Protected Question Routes",
      "item": [
        {
          "name": "Create Question",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-User-ID",
                "value": "user_123",
                "description": "User ID header for authentication"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"What is the difference between var, let, and const in JavaScript?\",\n  \"type\": \"multiple_choice\",\n  \"options\": [\n    {\n      \"id\": \"a\",\n      \"text\": \"var is function-scoped, let and const are block-scoped\"\n    },\n    {\n      \"id\": \"b\",\n      \"text\": \"They are all the same\"\n    },\n    {\n      \"id\": \"c\",\n      \"text\": \"var is newer than let and const\"\n    },\n    {\n      \"id\": \"d\",\n      \"text\": \"Only const can be reassigned\"\n    }\n  ],\n  \"correct_answer\": \"a\",\n  \"explanation\": \"var is function-scoped and can be hoisted, while let and const are block-scoped. const cannot be reassigned after declaration.\",\n  \"skill_id\": \"67893abc123def456789\",\n  \"difficulty_level\": \"easy\",\n  \"bloom_level\": \"understand\",\n  \"points\": 10,\n  \"estimated_time_seconds\": 45,\n  \"topic_tags\": [\"javascript\", \"variables\", \"scope\"],\n  \"question_pool_id\": \"js_fundamentals_pool\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/protected/quizz/question/",
              "host": ["{{baseUrl}}"],
              "path": ["protected", "quizz", "question", ""]
            },
            "description": "Create a new question for a skill"
          }
        },
        {
          "name": "Update Question",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-User-ID",
                "value": "user_123"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"Updated question content\",\n  \"difficulty_level\": \"medium\",\n  \"points\": 15\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/protected/quizz/question/:id",
              "host": ["{{baseUrl}}"],
              "path": ["protected", "quizz", "question", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "question_id_here"
                }
              ]
            },
            "description": "Update an existing question"
          }
        },
        {
          "name": "Delete Question",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "X-User-ID",
                "value": "user_123"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/protected/quizz/question/:id",
              "host": ["{{baseUrl}}"],
              "path": ["protected", "quizz", "question", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "question_id_here"
                }
              ]
            },
            "description": "Delete a question"
          }
        },
        {
          "name": "Bulk Question Operations",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-User-ID",
                "value": "user_123"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"operation\": \"bulk_create\",\n  \"questions\": [\n    {\n      \"content\": \"What is a closure in JavaScript?\",\n      \"type\": \"multiple_choice\",\n      \"correct_answer\": \"a\",\n      \"skill_id\": \"67893abc123def456789\",\n      \"difficulty_level\": \"medium\",\n      \"bloom_level\": \"understand\"\n    },\n    {\n      \"content\": \"JavaScript is a compiled language\",\n      \"type\": \"true_false\",\n      \"correct_answer\": \"false\",\n      \"skill_id\": \"67893abc123def456789\",\n      \"difficulty_level\": \"easy\",\n      \"bloom_level\": \"remember\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/protected/quizz/question/bulk",
              "host": ["{{baseUrl}}"],
              "path": ["protected", "quizz", "question", "bulk"]
            },
            "description": "Perform bulk operations on questions"
          }
        }
      ]
    },
    {
      "name": "Public Session Routes",
      "item": [
        {
          "name": "Get Session by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/public/quizz/session/:id",
              "host": ["{{baseUrl}}"],
              "path": ["public", "quizz", "session", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "session_id_here"
                }
              ]
            },
            "description": "Get basic session information"
          }
        },
        {
          "name": "Get Session Status (Public)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/public/quizz/session/:id/status",
              "host": ["{{baseUrl}}"],
              "path": ["public", "quizz", "session", ":id", "status"],
              "variable": [
                {
                  "key": "id",
                  "value": "session_id_here"
                }
              ]
            },
            "description": "Get public session status"
          }
        },
        {
          "name": "Get Skill Pool Info (Public)",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/public/quizz/session/pool/info?skill_id={{skillId}}",
              "host": ["{{baseUrl}}"],
              "path": ["public", "quizz", "session", "pool", "info"],
              "query": [
                {
                  "key": "skill_id",
                  "value": "{{skillId}}",
                  "description": "Skill ID to get pool info for"
                }
              ]
            },
            "description": "Get question pool information for a skill"
          }
        }
      ]
    },
    {
      "name": "Protected Session Routes",
      "item": [
        {
          "name": "Create Session (Skill-based)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-User-ID",
                "value": "user_123",
                "description": "Required user authentication"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"skill_id\": \"67893abc123def456789\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/protected/quizz/session/",
              "host": ["{{baseUrl}}"],
              "path": ["protected", "quizz", "session", ""]
            },
            "description": "Create a new skill-based quiz session"
          }
        },
        {
          "name": "Submit Answer",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-User-ID",
                "value": "user_123"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"question_id\": \"question_456\",\n  \"user_answer\": \"a\",\n  \"is_correct\": true,\n  \"time_spent_seconds\": 30\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/protected/quizz/session/:id/answer",
              "host": ["{{baseUrl}}"],
              "path": ["protected", "quizz", "session", ":id", "answer"],
              "variable": [
                {
                  "key": "id",
                  "value": "session_id_here"
                }
              ]
            },
            "description": "Submit an answer with adaptive processing"
          }
        },
        {
          "name": "Get Next Question",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-User-ID",
                "value": "user_123"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/protected/quizz/session/:id/next",
              "host": ["{{baseUrl}}"],
              "path": ["protected", "quizz", "session", ":id", "next"],
              "variable": [
                {
                  "key": "id",
                  "value": "session_id_here"
                }
              ]
            },
            "description": "Get next question based on adaptive logic"
          }
        },
        {
          "name": "Submit Session",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-User-ID",
                "value": "user_123"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"completion_type\": \"completed\",\n  \"final_score\": 85.5,\n  \"force_complete\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/protected/quizz/session/:id/submit",
              "host": ["{{baseUrl}}"],
              "path": ["protected", "quizz", "session", ":id", "submit"],
              "variable": [
                {
                  "key": "id",
                  "value": "session_id_here"
                }
              ]
            },
            "description": "Submit and finalize the session"
          }
        },
        {
          "name": "Pause Session",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-User-ID",
                "value": "user_123"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"reason\": \"user_requested\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/protected/quizz/session/:id/pause",
              "host": ["{{baseUrl}}"],
              "path": ["protected", "quizz", "session", ":id", "pause"],
              "variable": [
                {
                  "key": "id",
                  "value": "session_id_here"
                }
              ]
            },
            "description": "Pause an active session"
          }
        },
        {
          "name": "Resume Session",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-User-ID",
                "value": "user_123"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/protected/quizz/session/:id/resume",
              "host": ["{{baseUrl}}"],
              "path": ["protected", "quizz", "session", ":id", "resume"],
              "variable": [
                {
                  "key": "id",
                  "value": "session_id_here"
                }
              ]
            },
            "description": "Resume a paused session"
          }
        },
        {
          "name": "Get Session Status",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-User-ID",
                "value": "user_123"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/protected/quizz/session/:id/status",
              "host": ["{{baseUrl}}"],
              "path": ["protected", "quizz", "session", ":id", "status"],
              "variable": [
                {
                  "key": "id",
                  "value": "session_id_here"
                }
              ]
            },
            "description": "Get detailed adaptive session status"
          }
        },
        {
          "name": "Get Session Progress",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-User-ID",
                "value": "user_123"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/protected/quizz/session/:id/progress",
              "host": ["{{baseUrl}}"],
              "path": ["protected", "quizz", "session", ":id", "progress"],
              "variable": [
                {
                  "key": "id",
                  "value": "session_id_here"
                }
              ]
            },
            "description": "Get detailed session progress"
          }
        },
        {
          "name": "Get Session Statistics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-User-ID",
                "value": "user_123"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/protected/quizz/session/:id/statistics",
              "host": ["{{baseUrl}}"],
              "path": ["protected", "quizz", "session", ":id", "statistics"],
              "variable": [
                {
                  "key": "id",
                  "value": "session_id_here"
                }
              ]
            },
            "description": "Get session statistics"
          }
        },
        {
          "name": "Get Session Answers",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-User-ID",
                "value": "user_123"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/protected/quizz/session/:id/answers",
              "host": ["{{baseUrl}}"],
              "path": ["protected", "quizz", "session", ":id", "answers"],
              "variable": [
                {
                  "key": "id",
                  "value": "session_id_here"
                }
              ]
            },
            "description": "Get all answers for a session"
          }
        },
        {
          "name": "Validate Session Access",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-User-ID",
                "value": "user_123"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/protected/quizz/session/:id/validate",
              "host": ["{{baseUrl}}"],
              "path": ["protected", "quizz", "session", ":id", "validate"],
              "variable": [
                {
                  "key": "id",
                  "value": "session_id_here"
                }
              ]
            },
            "description": "Validate user access to session"
          }
        },
        {
          "name": "Get Skill Pool Info",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-User-ID",
                "value": "user_123"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/protected/quizz/session/pool/info?skill_id={{skillId}}",
              "host": ["{{baseUrl}}"],
              "path": ["protected", "quizz", "session", "pool", "info"],
              "query": [
                {
                  "key": "skill_id",
                  "value": "{{skillId}}",
                  "description": "Skill ID to get pool info for"
                }
              ]
            },
            "description": "Get detailed question pool information"
          }
        },
        {
          "name": "Preload Questions",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-User-ID",
                "value": "user_123"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"skill_id\": \"67893abc123def456789\",\n  \"stage\": \"easy\",\n  \"count\": 5,\n  \"exclude_ids\": []\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/protected/quizz/session/pool/preload",
              "host": ["{{baseUrl}}"],
              "path": ["protected", "quizz", "session", "pool", "preload"]
            },
            "description": "Preload questions for a specific stage"
          }
        }
      ]
    },
    {
      "name": "Public User Routes",
      "item": [
        {
          "name": "Get User Results",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/public/quizz/user/:id/results",
              "host": ["{{baseUrl}}"],
              "path": ["public", "quizz", "user", ":id", "results"],
              "variable": [
                {
                  "key": "id",
                  "value": "user_id_here"
                }
              ]
            },
            "description": "Get all results for a specific user"
          }
        }
      ]
    },
    {
      "name": "Protected Result Routes",
      "item": [
        {
          "name": "Create Result",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-User-ID",
                "value": "user_123"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"session_id\": \"session_123\",\n  \"user_id\": \"user_456\",\n  \"skill_id\": \"67893abc123def456789\",\n  \"final_score\": 85.5,\n  \"percentage\": 85.5,\n  \"badge_level\": \"intermediate\",\n  \"questions_attempted\": 10,\n  \"questions_correct\": 8,\n  \"stage_breakdown\": {\n    \"easy\": {\n      \"attempted\": 5,\n      \"correct\": 4,\n      \"score\": 40,\n      \"percentage\": 80,\n      \"passed\": true,\n      \"recovery_used\": false\n    },\n    \"medium\": {\n      \"attempted\": 5,\n      \"correct\": 4,\n      \"score\": 45.5,\n      \"percentage\": 91,\n      \"passed\": true,\n      \"recovery_used\": false\n    }\n  },\n  \"time_breakdown\": {\n    \"total_time_seconds\": 600,\n    \"average_time_per_question\": 60,\n    \"time_by_stage\": {\n      \"easy\": 300,\n      \"medium\": 300\n    }\n  },\n  \"bloom_breakdown\": {\n    \"remember\": {\n      \"attempted\": 3,\n      \"correct\": 3\n    },\n    \"understand\": {\n      \"attempted\": 3,\n      \"correct\": 2\n    },\n    \"apply\": {\n      \"attempted\": 2,\n      \"correct\": 2\n    },\n    \"analyze\": {\n      \"attempted\": 1,\n      \"correct\": 1\n    },\n    \"evaluate\": {\n      \"attempted\": 1,\n      \"correct\": 0\n    },\n    \"create\": {\n      \"attempted\": 0,\n      \"correct\": 0\n    }\n  },\n  \"completion_type\": \"completed\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/protected/quizz/result/",
              "host": ["{{baseUrl}}"],
              "path": ["protected", "quizz", "result", ""]
            },
            "description": "Create a new quiz result for skill-based session"
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set common variables",
          "pm.globals.set('skillId', '67893abc123def456789');",
          "pm.globals.set('userId', 'user_123');"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test script",
          "pm.test('Status code is successful', function () {",
          "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
          "});",
          "",
          "// Store session ID for subsequent requests",
          "if (pm.response.json() && pm.response.json().session && pm.response.json().session.id) {",
          "    pm.globals.set('sessionId', pm.response.json().session.id);",
          "}"
        ]
      }
    }
  ]
}
